name: Android CI

on: [push,pull_request]

jobs:
  build:
    name: Android Compilation Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Make Gradle executable
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
  artifactory:
    name: Release to Artifactory
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Make Gradle executable
        run: chmod +x gradlew
      - name: Generate Artifactory artifact and publish release and upload
        run: ./gradlew clean build signAarPublication artifactoryPublish
        env:
          ARTIFACTORY_CONTEXTURL: ${{ secrets.ARTIFACTORYCONTEXTURL }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORYPASSWORD }}
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORYUSER }}
          GPG_SIGN_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGN_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
      - name: Move Library AAR file to main folder
        run: mv ./\appupdater/build/outputs/aar/appupdater-release.aar ./appupdater-release.aar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GH Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release Notes Coming soon!
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./appupdater-release.aar
          asset_name: appupdater-release.aar
          asset_content_type: application/zip
  mavenCentral:
    name: Release to Maven Central
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Make Gradle executable
        run: chmod +x gradlew
      - name: Generate Maven Central artifact and publish release and upload
        run: ./gradlew clean build signAarPublication publish
        env:
          OSSRH_PASSWORD: ${{ secrets.OSSRHPASSWORD }}
          OSSRH_USER: ${{ secrets.OSSRHUSER }}
          GPG_SIGN_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGN_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
      - name: Finish Up
        run: echo Upload successful. Maintainers can proceed onto https://s01.oss.sonatype.org to release the artifacts when capable


